# Production Configuration for Airbnb Clone
spring:
  application:
    name: airbnb-clone
  
  profiles:
    active: prod
  
  # Production Database Configuration
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/airbnb}
    driver-class-name: org.postgresql.Driver
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:GAon@#$%12}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
  
  # JPA Configuration for Production
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        use_sql_comments: false
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
        connection:
          provider_disables_autocommit: true
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
        envers:
          audit_table_suffix: _audit
          revision_field_name: rev
          revision_type_field_name: revtype
          store_data_at_delete: true
          default_schema: public
          default_catalog: public
  
  # Redis Configuration for Production
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    database: ${REDIS_DATABASE:0}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 20
        max-idle: 10
        min-idle: 5
        max-wait: 2000ms
  
  # Cache Configuration for Production
  cache:
    type: redis
    redis:
      time-to-live: 3600000
      cache-null-values: false
      enable-statistics: true
  
  # Mail Configuration for Production
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            trust: smtp.gmail.com
  
  # File Upload Configuration
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
      enabled: true
  
  # Security Configuration
  security:
    user:
      name: ${ADMIN_USERNAME:admin}
      password: ${ADMIN_PASSWORD:admin123}
      roles: ADMIN

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: ${CONTEXT_PATH:/}
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  error:
    include-stacktrace: never
    include-message: never
    include-binding-errors: never

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890}
  expiration: ${JWT_EXPIRATION:86400}

# PayPal Configuration
paypal:
  client-id: ${PAYPAL_CLIENT_ID:}
  client-secret: ${PAYPAL_CLIENT_SECRET:}
  mode: ${PAYPAL_MODE:live}
  currency: ${PAYPAL_CURRENCY:USD}

# AWS S3 Configuration
aws:
  access-key-id: ${AWS_ACCESS_KEY_ID:}
  secret-access-key: ${AWS_SECRET_ACCESS_KEY:}
  s3:
    bucket-name: ${AWS_S3_BUCKET_NAME:}
    region: ${AWS_S3_REGION:us-east-1}

# Logging Configuration for Production
logging:
  level:
    root: WARN
    com.enterprise.airbnb: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/airbnb-clone.log
    max-size: 100MB
    max-history: 30
    total-size-cap: 1GB

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
    info:
      enabled: true
  info:
    env:
      enabled: true
    java:
      enabled: true
    build:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99
      slo:
        http.server.requests: 50ms, 100ms, 200ms, 500ms, 1s, 2s, 5s

# GraphQL Configuration
spring:
  graphql:
    graphiql:
      enabled: false
    path: /graphql

# Internationalization
spring:
  messages:
    basename: messages
    cache-duration: 3600
    encoding: UTF-8

# Task Execution and Scheduling
spring:
  task:
    execution:
      pool:
        core-size: 10
        max-size: 20
        queue-capacity: 100
        keep-alive: 60s
    scheduling:
      pool:
        size: 10

# H2 Console disabled for production
spring:
  h2:
    console:
      enabled: false

